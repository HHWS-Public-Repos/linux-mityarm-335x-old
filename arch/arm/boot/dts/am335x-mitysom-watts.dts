/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am335x-mitysom-common.dtsi"

/ {
	model = "Critical Link MitySOM-335x Devkit";

	/* Disable backlight driver, use GPIO Instead
	backlight: backlight {
		compatible = "pwm-backlight";
		pwms = <&ehrpwm0 1 50000 0>;
		brightness-levels = <0 51 53 56 62 75 101 152 255>;
		default-brightness-level = <8>;
	};

	*/

	gpio-keys {
		compatible = "gpio-keys";

		volumedown {
			label = "GPIO Key Volume Down";
			linux,code = <114>; /* KEY_VOLUMEDOWN */
			gpios = <&gpio3 3 GPIO_ACTIVE_HIGH>; /* CLEAR BUTTON */
		};

		volumeup {
			label = "GPIO Key Volume UP";
			linux,code = <115>; /* KEY_VOLUMEUP */
			gpios = <&pcal9535 7 GPIO_ACTIVE_HIGH>; /* Extended P0_7 */
		};
	};

	powertip_PH102600T013: lcd-controller@1 {
		compatible = "ti,tilcdc,panel";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&lcd_pins_default>;
		pinctrl-1 = <&lcd_pins_sleep>;
		status = "okay";
		model = "powertip,PH102600T013";

		/*backlight = <&backlight>;*/
		// enable-gpios = <&gpio3 8 GPIO_ACTIVE_HIGH>;

		panel-info {
			ac-bias           = <255>;
			ac-bias-intrpt    = <0>;
			dma-burst-sz      = <16>;
			bpp               = <32>;
			fdd               = <0x80>;
			sync-edge         = <0>;
			sync-ctrl         = <1>;
			raster-order      = <0>;
			fifo-th           = <0>;
			invert-pxl-clk    = <1>;
		};
		display-timings {
			1024x600 {
				clock-frequency = <51200000>;
				hactive = <1024>;
				vactive = <600>;
				hsync-len = <30>;
				hfront-porch = <160>;
				hback-porch = <160>;
				vsync-len = <6>;
				vfront-porch = <12>;
				vback-porch = <23>;
				hsync-active = <1>;
				vsync-active = <1>;
			};
		};
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&gpio_pins &ehrpwm0_pins &ecap_pins>;

	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x988, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda external pullup */
			AM33XX_IOPAD(0x98C, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl external pullup */
		>;
	};

	dcan0_pins_default: dcan0_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x91C, PIN_OUTPUT | MUX_MODE1) 		/* mii1_txd3.d_can0_tx */
			AM33XX_IOPAD(0x920, PIN_INPUT_PULLDOWN | MUX_MODE1) /* mii1_txd2.d_can1_rxd */
		>;
	};

	dcan1_pins_default: dcan1_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x968, PIN_OUTPUT | MUX_MODE2) 		/* uart0_ctsn.dcan1_txd */
			AM33XX_IOPAD(0x96c, PIN_INPUT_PULLDOWN | MUX_MODE2) /* uart0_rtsn.dcan1_rxd */
		>;
	};

	/* MODBUS 1 */
	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x958, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* spi0_d1.gpio0_4 UART1_DIR */
			AM33XX_IOPAD(0x980, PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_rxd.uart1_rxd UART1_RX */
			AM33XX_IOPAD(0x984, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart1_txd.uart1_txd UART1_TX */
		>;
	};

	/* MODBUS 2 */
	uart5_pins: pinmux_uart5_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x928, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* mii1_txd0.gpio0_28 UART5_DIR */
			AM33XX_IOPAD(0x908, PIN_INPUT_PULLUP | MUX_MODE3)	/* mii1_col..uart5_rxd UART4_RXD */
			AM33XX_IOPAD(0x918, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* mii1_rxdv.uart5_txd UART4_TXD */
		>;
	};

	ehrpwm0_pins: ehrpwm0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_OUTPUT | MUX_MODE3)		/* spi0_sclk.ehrpwm0a Buzzer */
		>;
	};
	
	
	/* Conflicts with SPINOR SOMs */
	spi1_pins: pinmux_spi1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x95c, PIN_OUTPUT | MUX_MODE7)		/* spi0_cs0.gpio0_5 SPI1_CS0 external pullup */
			AM33XX_IOPAD(0x990, PIN_INPUT | MUX_MODE3)		/* mcasp0_aclkx.spi1_sclk */
			AM33XX_IOPAD(0x994, PIN_INPUT_PULLUP | MUX_MODE3)	/* mcasp0_fsx.spi1_d0 MOSI */
			AM33XX_IOPAD(0x998, PIN_INPUT | MUX_MODE3)		/* mcasp0_axr0.spi1_d1 MISO external pullup */
			AM33XX_IOPAD(0x99C, PIN_INPUT_PULLUP | MUX_MODE3)	/* mcasp0_ahclkr.spi1_cs0 SOM:CS0 */
			AM33XX_IOPAD(0x9B4, PIN_INPUT | MUX_MODE7)      	/* xdma_event_intr1.gpio0_20 7SEG_CS J16.48 external pullup */
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 - Removed in rev 12*/

			/* Slave 2 */
			AM33XX_IOPAD(0x840, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a0.rgmii2_tctl */
			AM33XX_IOPAD(0x844, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a1.rgmii2_rctl */
			AM33XX_IOPAD(0x848, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a2.rgmii2_td3  */
			AM33XX_IOPAD(0x84C, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a3.rgmii2_td2  */
			AM33XX_IOPAD(0x850, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a4.rgmii2_td1  */
			AM33XX_IOPAD(0x854, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a5.rgmii2_td0  */
			AM33XX_IOPAD(0x858, PIN_OUTPUT | MUX_MODE2)		/* gpmc_a6.rgmii2_tclk */
			AM33XX_IOPAD(0x85C, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a7.rgmii2_rclk */
			AM33XX_IOPAD(0x860, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a8.rgmii2_rd3  */
			AM33XX_IOPAD(0x864, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a9.rgmii2_rd2  */
			AM33XX_IOPAD(0x868, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a10.rgmii2_rd1 */
			AM33XX_IOPAD(0x86C, PIN_INPUT_PULLDOWN | MUX_MODE2)	/* gpmc_a11.rgmii2_rd0 */
			AM33XX_IOPAD(0x88c, PIN_INPUT | MUX_MODE7)		/* gpmc_clk.gpio2_1 MII2_PHY_INTN external pullup */
			AM33XX_IOPAD(0x878, PIN_INPUT_PULLUP | MUX_MODE7)	/* gpmc_ben1.gpio1_28 MII2_RESETN */
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLUP | SLEWCTRL_FAST| MUX_MODE0)	/* mdio_data.mdio_data */
			AM33XX_IOPAD(0x94C, PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x94C, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	/* Setup for MMC0 */
	mmc1_pins_default: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x8F0, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat3.mmc0_dat3 */
			AM33XX_IOPAD(0x8F4, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat2.mmc0_dat2 */
			AM33XX_IOPAD(0x8F8, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat1.mmc0_dat1 */
			AM33XX_IOPAD(0x8FC, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat0.mmc0_dat0 */
			AM33XX_IOPAD(0x900, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_clk.mmc0_clk */
			AM33XX_IOPAD(0x904, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_cmd.mmc0_cmd */
		>;
	};

	lcd_pins_default: lcd_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x8A0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8A4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8A8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8AC, PIN_OUTPUT | MUX_MODE0)		/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8B0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8B4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8B8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8BC, PIN_OUTPUT | MUX_MODE0)		/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8C0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8C4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8C8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8CC, PIN_OUTPUT | MUX_MODE0)		/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8D0, PIN_OUTPUT | MUX_MODE0)		/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8D4, PIN_OUTPUT | MUX_MODE0)		/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8D8, PIN_OUTPUT | MUX_MODE0)		/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8DC, PIN_OUTPUT | MUX_MODE0)		/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x820, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad8.lcd_data16 */
			AM33XX_IOPAD(0x824, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad9.lcd_data17 */
			AM33XX_IOPAD(0x828, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad10.lcd_data18 */
			AM33XX_IOPAD(0x82C, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad11.lcd_data19 */
			AM33XX_IOPAD(0x830, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad12.lcd_data20 */
			AM33XX_IOPAD(0x834, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad13.lcd_data21 */
			AM33XX_IOPAD(0x838, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad14.lcd_data22 */
			AM33XX_IOPAD(0x83C, PIN_OUTPUT | MUX_MODE1)		/* gpmc_ad15.lcd_data23 */
			AM33XX_IOPAD(0x8E0, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8E4, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8E8, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8EC, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_ac_bias_en.lcd_ac_bias_en */
		>;
	};

	lcd_pins_sleep: lcd_pins_sleep {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x8A0, PULL_DISABLE | MUX_MODE7)		/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8A4, PULL_DISABLE | MUX_MODE7)		/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8A8, PULL_DISABLE | MUX_MODE7)		/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8AC, PULL_DISABLE | MUX_MODE7)		/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8B0, PULL_DISABLE | MUX_MODE7)		/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8B4, PULL_DISABLE | MUX_MODE7)		/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8B8, PULL_DISABLE | MUX_MODE7)		/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8BC, PULL_DISABLE | MUX_MODE7)		/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8C0, PULL_DISABLE | MUX_MODE7)		/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8C4, PULL_DISABLE | MUX_MODE7)		/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8C8, PULL_DISABLE | MUX_MODE7)		/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8CC, PULL_DISABLE | MUX_MODE7)		/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8D0, PULL_DISABLE | MUX_MODE7)		/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8D4, PULL_DISABLE | MUX_MODE7)		/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8D8, PULL_DISABLE | MUX_MODE7)		/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8DC, PULL_DISABLE | MUX_MODE7)		/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x820, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad8.lcd_data16 */
			AM33XX_IOPAD(0x824, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad9.lcd_data17 */
			AM33XX_IOPAD(0x828, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad10.lcd_data18 */
			AM33XX_IOPAD(0x82C, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad11.lcd_data19 */
			AM33XX_IOPAD(0x830, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad12.lcd_data20 */
			AM33XX_IOPAD(0x834, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad13.lcd_data21 */
			AM33XX_IOPAD(0x838, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad14.lcd_data22 */
			AM33XX_IOPAD(0x83C, PULL_DISABLE | MUX_MODE7)		/* gpmc_ad15.lcd_data23 */
			AM33XX_IOPAD(0x8E0, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8E4, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8E8, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8EC, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_ac_bias_en.lcd_ac_bias_en */
		>;
	};

	ecap_pins: ecap_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x964, PIN_INPUT | MUX_MODE0)		/* ecap0_in_pwm0_out.ecap0_in_pwm0_out ECAP J11.6 external pulldown*/
		>;
	};

	gpio_pins: gpio_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x880, PIN_INPUT_PULLUP | MUX_MODE7)              /* gpmc_csn1.gpio1_30 IO_Expand_INTn external pullup */
			AM33XX_IOPAD(0x914, PIN_INPUT_PULLUP | MUX_MODE7)		/* rmii1_txen.gpio3_3 CLEAR_Button  external pullup */
			AM33XX_IOPAD(0x924, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* rmii1_txd1.gpio0_21 J19.8 */
			AM33XX_IOPAD(0x92C, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* rmii1_txclk.gpio3_9 PROXIMITY */
			AM33XX_IOPAD(0x930, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* rmii1_rxclk.gpio3_10 J19.5 */
			AM33XX_IOPAD(0x934, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* rmii1_rxd3.gpio2_18 J19.7 */
			AM33XX_IOPAD(0x944, PIN_INPUT | MUX_MODE7)		/* rmii1_refclk.gpio0_29 TS_INT external pullup */
			AM33XX_IOPAD(0x960, PIN_INPUT | MUX_MODE7)		/* spi0_cs1.gpio0_6 Brown_Out */
			AM33XX_IOPAD(0x9A0, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* mcasp0_aclkr.gpio3_18 RTD_A1 */
			AM33XX_IOPAD(0x9A4, PIN_INPUT_PULLDOWN | MUX_MODE7) 	/* mcasp0_fsr.gpio3_19 RTD_A0 */
			AM33XX_IOPAD(0x9A8, PIN_INPUT_PULLDOWN | MUX_MODE7) 	/* mcasp0_axr1.gpio3_20 RTD_A3 */
			AM33XX_IOPAD(0x9AC, PIN_INPUT_PULLDOWN | MUX_MODE7) 	/* mcasp0_ahclkx.gpio3_21 RTD_A2 */
			AM33XX_IOPAD(0x9B0, PIN_INPUT_PULLDOWN | MUX_MODE7) 	/* xdma_event_intr0.gpio0_19 7SEG_OFF J16.47 */
			AM33XX_IOPAD(0x9E4, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* emu0.gpio3_7 J19.9 */
			AM33XX_IOPAD(0x9E8, PIN_INPUT_PULLDOWN | MUX_MODE7)		/* emu1.gpio3_8 J19.6 */
			AM33XX_IOPAD(0x940, PIN_INPUT | MUX_MODE7)		/* mii1_rxd0.gpio2_21 TOUCH_RESET J16.30 */
			AM33XX_IOPAD(0xA1C, PIN_INPUT | MUX_MODE7)		/* usb0_drvvbus.gpio0_18 Hub_Reset external pullup */
			AM33XX_IOPAD(0xA34, PIN_INPUT | MUX_MODE7)		/* usb1_drvvbus.gpio3_13 WIFI_PMU external pullup */
		>;
	};
};

/* Name the gpios so they can be referenced by name */
&gpio0 {
	gpio-line-names =
		"GPIO0_0", "GPIO0_1", "GPIO0_2", "BACKLIGHT",
		"GPIO0_4", "GPIO0_5", "BROWN_OUT", "GPIO0_7",
		"GPIO0_8", "GPIO0_9", "GPIO0_10", "GPIO0_11",
		"GPIO0_12", "GPIO0_13", "GPIO0_14", "GPIO0_15",
		"GPIO0_16", "GPIO0_17", "HUB_RESET", "7SEG_EN",
		"GPIO0_20", "GPIO0_21", "GPIO0_22", "GPIO0_23",
		"GPIO0_24", "GPIO0_25", "GPIO0_26", "GPIO0_27",
		"GPIO0_28", "GPIO0_29", "GPIO0_30", "GPIO0_31";
	gpio-3 {
		gpio-hog;
		gpios = <3 GPIO_ACTIVE_HIGH>;
		output-high;
	};
};

&gpio1 {
	gpio-line-names =
		"GPIO1_0", "GPIO1_1", "GPIO1_2", "GPIO1_3",
		"GPIO1_4", "GPIO1_5", "GPIO1_6", "GPIO1_7",
		"GPIO1_8", "GPIO1_9", "GPIO1_10", "GPIO1_11",
		"GPIO1_12", "GPIO1_13", "GPIO1_14", "GPIO1_15",
		"GPIO1_16", "GPIO1_17", "GPIO1_18", "GPIO1_19",
		"GPIO1_20", "GPIO1_21", "GPIO1_22", "GPIO1_23",
		"GPIO1_24", "GPIO1_25", "GPIO1_26", "GPIO1_27",
		"GPIO1_28", "GPIO1_29", "GPIO1_30", "GPIO1_31";
};

&gpio2 {
	gpio-line-names =
		"GPIO2_0", "GPIO2_1", "GPIO2_2", "GPIO2_3",
		"GPIO2_4", "GPIO2_5", "GPIO2_6", "GPIO2_7",
		"GPIO2_8", "GPIO2_9", "GPIO2_10", "GPIO2_11",
		"GPIO2_12", "GPIO2_13", "GPIO2_14", "GPIO2_15",
		"GPIO2_16", "GPIO2_17", "Aux_PWM_Enable", "GPIO2_19",
		"GPIO2_20", "GPIO2_21", "GPIO2_22", "GPIO2_23",
		"GPIO2_24", "GPIO2_25", "GPIO2_26", "GPIO2_27",
		"GPIO2_28", "GPIO2_29", "GPIO2_30", "GPIO2_31";
};

&gpio3 {
	gpio-line-names =
		"GPIO3_0", "GPIO3_1", "GPIO3_2", "CLEAR_BUTTON",
		"GPIO3_4", "GPIO3_5", "GPIO3_6", "POWER_SWITCH_N",
		"GPIO3_8", "GPIO3_9", "GPIO3_10", "GPIO3_11",
		"GPIO3_12", "WIFI_PMU", "GPIO3_14", "GPIO3_15",
		"GPIO3_16", "GPIO3_17", "RTD_A1", "RTD_A0",
		"RTD_A3", "RTD_A2", "GPIO3_22", "GPIO3_23",
		"GPIO3_24", "GPIO3_25", "GPIO3_26", "GPIO3_27",
		"GPIO3_28", "GPIO3_29", "GPIO3_30", "GPIO3_31";
};


/* RS485 MODBUS 1 */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	rts-gpio = <&gpio0 4 GPIO_ACTIVE_HIGH>;
	rs485-rts-delay =<0 0>;
	rs485-rts-active-high;
	/*rs485-rx-during-tx;*/
	linux,rs485-enabled-at-boot-time;
	status = "okay";
};

/* RS485 MODBUS 2 */
&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins>;
	rts-gpio = <&gpio0 28 GPIO_ACTIVE_HIGH>;
	rs485-rts-delay =<0 0>;
	rs485-rts-active-high;
	/*rs485-rx-during-tx;*/
	linux,rs485-enabled-at-boot-time;
	status = "okay";
};


&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	status = "okay";
	clock-frequency = <400000>;

	/* PCAL9535A 16-bit GPIO expander 0x27 */
	pcal9535: pcal9535@27 {
		compatible = "nxp,pcal9535";
		reg = <0x27>;
		gpio-controller;
		interrupt-parent = <&gpio1>;
		interrupts = <30 IRQ_TYPE_EDGE_FALLING>; /* gpio1_30 */
		#interrupt-cells = <2>;
		#gpio-cells = <2>;
		gpio-line-names =
		"RELAY_0", "RELAY_1", "RELAY_2", "RELAY_3",
		"DIGITAL_IN_8", "DIGITAL_IN_7", "DIGITAL_IN_6", "DIGITAL_IN_5",
		"OVERTEMP_IN", "ENABLE/DISABLE", "DIGITAL_IN_4", "DIGITAL_IN_3",
		"DIGITAL_IN_2", "DIGITAL_IN_1", "RELAY_4", "RELAY_5";
	};

	/* ADS1110 - 16-Bit ADC RTD_IN 0x4A */

	eeprom@50 {
		compatible = "st,m24256", "st,24c256", "atmel,24c256";
		reg = <0x50>;
		pagesize = <64>;
	};

	eeprom@51 {
		compatible = "st,m24256", "st,24c256", "atmel,24c256";
		reg = <0x51>;
		pagesize = <64>;
	};

	/* MCP4728 12-bit Quad DAC 0x60 */
};

&i2c1 {
	/* SOM PMIC SmartReflex 0x12 */

	/* GT911 TSC 0x14 */
	gt911@14 {
		compatible = "goodix,gt911";
		reg = <0x14>;
		interrupt-parent = <&gpio0>;
		interrupts = <29 IRQ_TYPE_EDGE_FALLING>;

		irq-gpios = <&gpio0 29 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio2 21 GPIO_ACTIVE_HIGH>;
		// touchscreen-swapped-x-y;
	};

	/* Display Board PCAL9535A 16-bit GPIO expander 0x20 */
	pcal9535disp: pcal9535disp@20 {
		compatible = "nxp,pcal9535";
		reg = <0x20>;
		gpio-controller;
		#gpio-cells = <2>;
		gpio-line-names =
		"", "", "", "",
		"", "", "", "",
		"", "", "DEMAND", "MANAGER",
		"CASCADE", "BAS", "onAER", "FAULT CLR";
	};

	/* Backlight PWM */
	ds1050bl: ds1050z@28 {
		compatible = "maxim,ds1050";
		reg = <0x28>;
	};

	/* IO PWM */
	ds1050io: ds1050z@29 {
		/* GPIO 2_18 Aux_PWM_Enable */
		compatible = "maxim,ds1050";
		reg = <0x29>;
	};


	/* System Voltage Monitor 0x48 */
	ads7828: ads7828@48 {
		compatible = "ti,ads7828";
		reg = <0x48>;
	};

	/* SOM Factory EEPROM 0x50 - 0x57 */

	/* MCP7940N RTC 0x6F */
	mcp79400: mcp79400@6f {
		compatible = "microchip,mcp7940x";
		reg = <0x6f>;
	};

	/* MCP4728 12-bit Quad DAC 0x60 */
};

&usb0 {
	status = "okay";
	dr_mode = "host";
};

&usb1 {
	status = "okay";
	dr_mode = "host";

	/* Laird Wifi */
	st60@2{
		compatible = "usb1286,204e";
		reg = <2>;
		#address-cells = <2>;
		#size-cells = <0>;

		wifi@2 {
			compatible = "usbif1286,204e.config1.2";
			reg = <2 1>;
			pmu-en-gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
		};
	};
};

&lcdc {
	status = "okay";

	/* If you want to get 24 bit RGB and 16 BGR mode instead of
	 * current 16 bit RGB and 24 BGR modes, set the propety
	 * below to "crossed" and uncomment the video-ports -property
	 * in tda19988 node.
	 * AM335x errata for wiring:
	 * http://www.ti.com/lit/er/sprz360i/sprz360i.pdf
	 */

	blue-and-red-wiring = "crossed";
};

&epwmss0 {
	status = "okay";

	ehrpwm0: pwm@48300200 {
		status = "okay";
	};
	ecap0: ecap@48300100 {
		compatible = "ti,am62-ecap-capture";
		status = "okay";
	};
};

/ {
	v3_3_analog_fixed: fixedregulator@2 {
		compatible = "regulator-fixed";
		regulator-name = "v3.3_analog_fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
	};
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_pins>;
	/* Not supported: CS0 On-SOM NOR */

	/* Note: spi1 crashes when using more than 4 channels */
	cs-gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>, <0>, <0>, <&gpio0 20 GPIO_ACTIVE_HIGH>;

	/* SPI1_CS0 - gpio1_15 MCP3208 */
	mcp3208_ain@0 {
		compatible = "microchip,mcp3208";
		reg = <0>;
		spi-max-frequency = <1000000>;
		vref-supply = <&v3_3_analog_fixed>;

		/* channels = "AIN1", "AIN2", "AIN3", "AIN4"; */
	};

	/* 7SEG_CS - gpio0_20 */
	tlc59281: tlc59281@3 {
		compatible = "spidev";
		reg = <3>;
		status = "okay";

		spi-max-frequency = <2000000>;
	};
};

&mac {
	pinctrl-names = "default";
	pinctrl-0 = <&cpsw_default>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";

	reset-gpios = <&gpio1 28 GPIO_ACTIVE_LOW>;
	reset-delay-us = <2>;

	phy0: ethernet-phy@2 {
		reg = <2>;
	};
};

&cpsw_emac1 {
	phy-handle = <&phy0>;
	phy-mode = "rgmii";
	dual_emac_res_vlan = <1>;
};


/* ADC */
&tscadc {
	status = "okay";
	/* XR, YD, XL, YI, GND, 3.3V/2, 3.3V/2, GND */
	// tsc {
	// 	ti,wires = <4>;
	// 	ti,x-plate-resistance = <200>;
	// 	ti,coordinate-readouts = <5>;
	// 	ti,wire-config = <0x00 0x11 0x22 0x33>;
	// 	ti,charge-delay = <0x400>;
	// };

	adc {
		ti,adc-channels = <5 6>;
	};
};

&mmc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins_default>;
	status = "okay";
	vmmc-supply = <&vmmc_fixed>;
	bus-width = <4>;
};

&dcan0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan0_pins_default>;
};

&dcan1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan1_pins_default>;
};


&rtc {
	system-power-controller;
};

